<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1"><title id="kw142714">gplogfilter</title><body>
  <p>在Greenplum数据库日志文件中搜索指定的项。</p>
  <section id="section2">
    <title>概要</title>
    <codeblock><b>gplogfilter</b> [<varname>timestamp_options</varname>] [<varname>pattern_options</varname>] 
      [<varname>output_options</varname>] [<varname>input_options</varname>] [<varname>input_file</varname>] 
      
      <b>gplogfilter</b> <b>--help</b> 
      
      <b>gplogfilter</b> <b>--version</b></codeblock></section><section id="section3">
        <title>描述</title>
        <p><codeph>gplogfilter</codeph>工具可以被用来在一个Greenplum数据库日志文件中搜索匹配指定条件的项。
          如果没有提供输入文件，那么<codeph>gplogfilter</codeph>将使用环境变量<codeph>$MASTER_DATA_DIRECTORY</codeph>
          在标准日志位置定位Greenplum的Master日志文件。要从标准输入读取，可用一个破折号（<codeph>-</codeph>）作为输入文件名。
          输入文件可以被使用<codeph>gzip</codeph>压缩。在输入文件中，日志项由其<codeph>YYYY-MM-DD [hh:mm[:ss]]</codeph>
          格式的时间戳标识。</p>
        <p>如果通过<codeph><xref href="./gpssh.xml#topic1" type="topic" format="dita"/></codeph>工具运行
          <codeph>gplogfilter</codeph>，用户还可以用它来一次搜索所有的Segment日志文件。例如，要显示每个Segment
          日志文件中的最后三行：
        </p><codeblock>gpssh -f seg_host_file
          =&gt; source /usr/local/greenplum-db/greenplum_path.sh
          =&gt; gplogfilter -n 3 /gpdata/*/pg_log/gpdb*.csv</codeblock>
        <p><codeph>gplogfilter</codeph>的输出默认被发送到标准输出。可以使用<codeph>-o</codeph>选项把输出发送到一个文件或者一个目录。
          如果用户提供了一个以<codeph>.gz</codeph>结束的输出文件名，该输出文件默认将被以最大压缩率压缩。如果输出目标是一个目录，
          输出文件将被命名为输入文件的名字。</p></section>
  <section id="section4">
    <title>选项</title><sectiondiv id="section5">
      <b>时间戳选项</b>
      <parml>
        <plentry>
          <pt>-b <varname>datetime</varname> | --begin=<varname>datetime</varname></pt>
          <pd>以格式<codeph>YYYY-MM-DD [hh:mm[:ss]]</codeph>指定要搜索的日志项的开始日期和时间。
          </pd>
          <pd>如果指定一个时间，日期和时间必须被封闭在单引号或者双引号中。这个例子将日期和时间封闭在单引号中：
          </pd>
          <pd><codeblock>gplogfilter -b '2013-05-23 14:33'</codeblock></pd></plentry><plentry><pt>-e <varname>datetime</varname> | --end=<varname>datetime</varname></pt>
            <pd>指定一个<codeph>YYYY-MM-DD [hh:mm[:ss]]</codeph>格式的结束日期和时间来停止搜索日志信息。
            </pd>
          </plentry>
        <plentry>
          <pt>-d <varname>time</varname> | --duration=<varname>time</varname></pt>
          <pd>以<codeph>[hh][:mm[:ss]]</codeph>格式指定要搜索的日志项所在的时间长度。如果指定这个选项
            但没有指定<codeph>-b</codeph>或<codeph>-e</codeph>选项，将使用当前时间作为基础。
          </pd>
        </plentry>
      </parml>
    </sectiondiv>
    <sectiondiv id="section6">
      <b>模式匹配选项</b>
      <parml><plentry><pt>-c i [gnore] | r [espect] | --case=i [gnore] | r [espect]</pt>
        <pd>除非前面放上<codeph>--case=ignore</codeph>选项，字母表符号的匹配默认是大小写敏感的。
        </pd>
      </plentry>
        <plentry>
          <pt>-C '<varname>string</varname>' | --columns='<varname>string</varname>'</pt>
          <pd>从日志文件中选择特定的列。将想要的列指定为由逗号定界的列编号串，列编号从1开始，
            从左到右依次是1、2、3等等。<ph>关于日志文件格式的详情以及可用列的列表及其相关编号
              请见<i>Greenplum数据库管理员指南</i>中的“查看数据库服务器日志文件”部分。
            </ph>
          </pd>
        </plentry>
        <plentry>
          <pt>-f '<varname>string</varname>' | --find='<varname>string</varname>'</pt>
          <pd>查找包含指定字符串的日志项。</pd>
        </plentry>
        <plentry>
          <pt>-F '<varname>string</varname>' | --nofind='<varname>string</varname>'</pt>
          <pd>拒绝包含指定字符串的日志项。</pd>
        </plentry>
        <plentry>
          <pt>-m <varname>regex</varname> | --match=<varname>regex</varname></pt>
          <pd>查找匹配指定的Python正则表达式的日志项。Python正则表达式语法请参考
            <xref href="https://docs.python.org/library/re.html" scope="external" format="html">
              https://docs.python.org/library/re.html</xref>
          </pd>
        </plentry>
        <plentry>
          <pt>-M <varname>regex</varname> | --nomatch=<varname>regex</varname></pt>
          <pd>拒绝匹配指定Python正则表达式的日志项。Python正则表达式语法请参考
            <xref href="https://docs.python.org/library/re.html" scope="external" format="html">
              https://docs.python.org/library/re.html</xref>
          </pd>
        </plentry>
        <plentry>
          <pt>-t | --trouble</pt>
          <pd>只查找在第一行有<codeph>ERROR:</codeph>、<codeph>FATAL:</codeph>或者
            <codeph>PANIC:</codeph>的日志项。
          </pd>
        </plentry>
      </parml>
    </sectiondiv>
    <sectiondiv id="section7">
      <b>输出选项</b>
      <parml>
        <plentry>
          <pt>-n <varname>integer</varname> | --tail=<varname>integer</varname></pt>
          <pd>限制输出为找到的符合条件日志项中的最后<varname>integer</varname>项。</pd>
        </plentry>
        <plentry>
          <pt>-s <varname>offset</varname> [limit] | --slice=<varname>offset</varname> [limit]</pt>
          <pd>从符合条件的日志项列表中，从<varname>offset</varname>项处开始返回<varname>limit</varname>个项，
            其中为零（<codeph>0</codeph>）的<varname>offset</varname>指示结果集中的第一项并且任何不超过零的
            <varname>offset</varname>表示从结果集的末尾开始数。
          </pd>
        </plentry>
        <plentry>
          <pt>-o <varname>output_file</varname> | --out=<varname>output_file</varname></pt>
          <pd>将输出写到指定的文件或者目录位置而不是<codeph>STDOUT</codeph>。
          </pd>
        </plentry>
        <plentry>
          <pt>-z 0-9 | --zip=0-9</pt>
          <pd>使用<codeph>gzip</codeph>把输出文件压缩到指定的压缩级别，其中<codeph>0</codeph>
            是不压缩而<codeph>9</codeph>是最大压缩。如果用户提供一个以<codeph>.gz</codeph>
            结束的输出文件名，该输出文件默认将被使用最大压缩级别压缩。
          </pd>
        </plentry>
        <plentry>
          <pt>-a | --append</pt>
          <pd>如果输出文件已经存在，会追加到该文件而不是覆盖它。</pd>
        </plentry>
      </parml>
    </sectiondiv>
    <sectiondiv id="section8">
      <b>输入选项</b>
      <parml>
        <plentry>
          <pt>input_file</pt>
          <pd>要在其中搜索的输入日志文件的名称。如果没有提供输入文件，<codeph>gplogfilter</codeph>
            将使用环境变量<codeph>$MASTER_DATA_DIRECTORY</codeph>来定位Greenplum数据库的Master
            日志文件。要从标准输入读取，可使用一个破折号（<codeph>-</codeph>）作为输入文件名。
          </pd>
        </plentry>
        <plentry>
          <pt>-u | --unzip</pt>
          <pd>使用<codeph>gunzip</codeph>解压输入文件。如果输入文件名以<codeph>.gz</codeph>结束，
            它默认将被解压。
          </pd>
        </plentry>
        <plentry>
          <pt>--help</pt>
          <pd>显示在线帮助。</pd>
        </plentry><plentry>
          <pt>--version</pt>
          <pd>显示这个工具的版本。</pd>
        </plentry>
      </parml>
    </sectiondiv>
  </section>
  <section id="section9">
    <title>示例</title>
    <p>显示Master日志文件中的最后三个错误消息：</p>
    <codeblock>gplogfilter -t -n 3</codeblock>
    <p>显示Master日志文件中时间戳位于最后10分钟内的所有日志消息：</p>
    <codeblock>gplogfilter -d :10</codeblock>
    <p>显示Master日志文件中包含字符串<codeph>|con6
      cmd11|</codeph>的日志消息：</p>
    <codeblock>gplogfilter -f '|con6 cmd11|'</codeblock>
    <p>使用<codeph><xref href="./gpssh.xml#topic1" type="topic" format="dita"/></codeph>
      在Segment主机上运行<codeph>gplogfilter</codeph>并且在Segment日志文件中搜索含有字符串
      <codeph>con6</codeph>的日志消息，把输出保存到一个文件。</p>
    <codeblock>gpssh -f seg_hosts_file -e 'source 
      /usr/local/greenplum-db/greenplum_path.sh ; gplogfilter -f 
      con6 /gpdata/*/pg_log/gpdb*.csv' &gt; seglog.out</codeblock></section>
  <section id="section10">
    <title>另见</title>
    <p>
      <codeph>
        <xref href="./gpssh.xml#topic1" type="topic" format="dita"/></codeph>、<codeph><xref href="./gpscp.xml#topic1" type="topic" format="dita"/></codeph></p></section></body></topic>
