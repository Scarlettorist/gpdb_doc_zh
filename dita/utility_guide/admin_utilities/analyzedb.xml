<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<topic id="topic1">
  <title id="pg137116">analyzedb</title>
  <body>
    <p>一个提供对表的递增和并发<codeph>ANALYZE</codeph>操作的工具。<ph>对追加优化表来说，
      <cmdname>analyzedb</cmdname>只在统计数据不是最新的时候才更新统计信息。</ph>
    </p>
    <section>
      <title>概要</title>
      <codeblock><b>analyzedb</b> <b>-d</b> <varname>dbname</varname>
        { <b>-s</b> <varname>schema</varname>  | 
        { <b>-t</b> <varname>schema</varname>.<varname>table</varname> 
        [ <b>-i</b> <varname>col1</varname>[, <varname>col2</varname>, ...] | 
        <b>-x</b> <varname>col1</varname>[, <varname>col2</varname>, ...] ] } |
        { <b>-f</b> | <b>--file</b>} <varname>config-file</varname> }
        [ <b>-l</b> | <b>--list</b> ]
        [ <b>--gen_profile_only</b> ]   
        [ <b>-p</b> <varname>parallel-level</varname> ]
        [ <b>--full</b> ]
        [ <b>-v</b> | <b>--verbose</b> ]
        [ <b>--debug</b> ]
        [ <b>-a</b> ]
        
        <b>analyzedb</b> { <b>--clean_last</b> | <b>--clean_all</b> }
        <b>analyzedb</b> <b>--version</b>
        <b>analyzedb</b> { <b>-?</b> | <b>-h</b> | <b>--help</b> }</codeblock>
    </section>
    <section>
      <title>描述</title>
      <p><cmdname>analyzedb</cmdname>工具递增并发地更新Greenplum数据库中指定表的表数据的统计信息。
      </p>
      <p>在执行<codeph><xref href="../../ref_guide/sql_commands/ANALYZE.xml"
        >ANALYZE</xref></codeph>操作时，<cmdname>analyzedb</cmdname>创建了表元数据的快照并将它
        存储在Master主机的磁盘上。只有在表格被修改的情况下才执行<codeph>ANALYZE</codeph>操作。如果
        表或者分区自从上次分区依赖没有被修改过，则<cmdname>analyzedb</cmdname>会自动跳过表或分区，
        因为它已经包含了最新的统计信息。
      </p>
      <ul id="ul_vgw_25c_3r">
        <li>对追加优化表来说，<cmdname>analyzedb</cmdname>如果统计数据数据不是最新的，则会逐渐分析统计数据。
          例如，如果表数据在表的统计数据收集之后改变了。如果没有该表的统计数据，则收集统计数据。
        </li>
        <li>对于堆表，统计信息总是被更新。</li>
      </ul>
      <p>即使表格统计信息是新的，也可以指定<codeph>--full</codeph>选项来更新追加优化表的统计信息。
      </p>
      <p dir="ltr">默认情况下，<cmdname>analyzedb</cmdname>最多创建5个并发会话来并行分析表。
        对于每个会话，<cmdname>analyzedb</cmdname>发出一个<cmdname>ANALYZE</cmdname>命令到
        数据库并指定不同的表名。<codeph>-p</codeph>选项控制最大并发会话数。
      </p>
      <sectiondiv>
        <b>分区追加优化表</b>
        <p>对于一个分区的追加优化表<cmdname>analyzedb</cmdname>检查分区表的根分区和叶子分区。
          如果需要，该工具将更新非当前分区和根分区的统计信息。
        </p>
        <p dir="ltr">GPORCA需要根分区统计信息。默认情况下，如果统计信息不存在，那么<cmdname>analyzedb</cmdname>
          工具将收集分区表的根分区的统计信息。如果任何叶子节点有陈旧的统计信息，那么,<cmdname>analyzedb</cmdname>
          也会刷新根分区的统计信息。刷新根节点的统计信息的成本和分析一个叶子分区相当。用户可以指定
          <codeph>--skip_root_stats</codeph>来禁用分区表的根分区的统计信息的收集。
        </p>
      </sectiondiv>
    </section>
    <section><title>注意</title>
      <p>如果表已经由DML或DDL命令（包括<cmdname>INSERT</cmdname>, <cmdname>DELETE</cmdname>, <cmdname>UPDATE</cmdname>,
        <cmdname>CREATE TABLE</cmdname>, <cmdname>ALTER TABLE</cmdname> 和
        <cmdname>TRUNCATE</cmdname>）修改，则<cmdname>analyzedb</cmdname>工具会更新追加优化表的统计信息。
        该工具通过比较表的元数据和之前<cmdname>analyzedb</cmdname>操作中所保存的快照目录元数据来确定表是否已经被修改。表元数据的快照
        作为状态文件存储在Greenplum数据库主数据目录中的<codeph>db_analyze/&lt;<varname>db_name</varname>>/&lt;<varname>timestamp</varname>></codeph>
        目录中。
      </p>该工具不会自动删除旧的快照信息。时间久了，这些快照会占用大量的磁盘空间。为了回收磁盘空间，您可以
      保留最近的快照信息，将旧的快照删掉。
      用户可以指定<codeph>--clean_last</codeph>或者<codeph>--clean_all</codeph>选项来删除由
      <cmdname>analyzedb</cmdname>生成的状态文件。
      <p>如果用户未指定表，一组表或模式，那么<cmdname>analyzedb</cmdname>工具会根据需要收集所有系统
        目录表和用户定义的表中的统计信息。
      </p>
      <p>外部表不受<cmdname>analyzedb</cmdname>的影响。</p>
      <p>包含空格的表名是不支持的。</p>
      <p>在表上运行<codeph>ANALYZE</codeph>命令，（不使用<codeph>analyzedb</codeph>工具），不会更新表的元数据，
        <codeph>analyzedb</codeph>工具通常使用这些元数据通常来确定表的统计信息是否是最新的表的元数据。
      </p></section>
    <section>
      <title>选项</title>
      <parml>
        <plentry>
          <pt>--clean_last</pt>
          <pd>删除由上一次<cmdname>analyzedb</cmdname>操作生成的状态文件。所有的其他选项，
            除了<cmdname>-d</cmdname>都会被忽略。</pd>
        </plentry>
        <plentry>
          <pt>--clean_all</pt>
          <pd>删除由<cmdname>analyzedb</cmdname>生成的所有状态文件。
            所有其他操作除了<cmdname>-d</cmdname>都会被忽略。
          </pd>
        </plentry>
        <plentry>
          <pt>-d <varname>dbname</varname></pt>
          <pd>指定包含要分析的表的数据库的名称。如果未指定此选项，则从环境变量<codeph>PGDATABASE</codeph>
            中读取数据库名称。如果未设置<codeph>PGDATABASE</codeph>，则使用连接指定的用户名。</pd>
        </plentry>
        <plentry>
          <pt> --debug</pt>
          <pd>如果指定，则将日志级别设置为调试。在执行命令期间，调试级别信息被写入日志文件和命令行。
            这些信息包括公用程序执行的命令和每个<codeph>ANALYZE</codeph>操作的持续时间。
          </pd>
        </plentry>
        <plentry>
          <pt>-f <varname>config-file</varname> | --file <varname>config-file</varname></pt>
          <pd>包含要分析的表的列表的文本文件。可以指定当前目录的相对文件路径。
          </pd>
          <pd>该文件每行列出一个表。表名必须使用模式名称进行限定。或者，可以使用<cmdname>-i</cmdname>或
            <cmdname>-x</cmdname>来指定列名。文件中国不允许其他选项。其他诸如<codeph>--full</codeph>
            的选项必须在命令行中指定。
          </pd>
          <pd>只有一个选项可用于指定要分析的文件：<codeph>-f</codeph>或<codeph>--file</codeph>, <codeph>-t</codeph> ,或
            <codeph>-s</codeph>。</pd>
          <pd>当在多个表上执行<cmdname>ANALYZE</cmdname>操作时候，<cmdname>analyzedb</cmdname>
            会创建并行会话来并行分析表。该<codeph>-p</codeph>选项控制并发会话的最大数目。
          </pd>
          <pd>在下面的示例中，第一行施加了一个<cmdname>ANALYZE</cmdname>操作对表<codeph>public.nation</codeph>，
            第二行仅对<codeph>public.lineitem</codeph>表的<codeph>l_shipdate</codeph>和
            <codeph>l_receiptdate</codeph>列施加了一个<cmdname>ANALYZE</cmdname>操作。
            <codeblock>public.nation
              public.lineitem -i l_shipdate, l_receiptdate </codeblock></pd>
        </plentry>
        <plentry>
          <pt>--full</pt>
          <pd>对所有指定的表执行<cmdname>ANALYZE</cmdname>操作。即使统计数据是最新的，也会执行该操作。
          </pd>
        </plentry>
        <plentry>
          <pt>--gen_profile_only</pt>
          <pd>不执行<codeph>ANALYZE</codeph>操作，但是更新<codeph>analyzedb</codeph>收集的表统计信息快照。
            如果有其他选项制定了表或者模式名，该工具仅更新指定表的快照信息。</pd>
          <pd>如果<codeph>ANALYZE</codeph>命令在数据库表上运行并且您想更新<codeph>analyzedb</codeph>该表
            的快照信息，请指定该选项。</pd>
        </plentry>
        <plentry>
          <pt>-i <varname>col1</varname>, <varname>col2</varname>, ...</pt>
          <pd>可选的，必须用<cmdname>-t</cmdname>选项指定。对于使用<cmdname>-t</cmdname>选项指定的表，
            仅收集指定列的统计信息。
          </pd>
          <pd>只能指定<cmdname>-i</cmdname>, 或<cmdname>-x</cmdname>。这两个选项不能同时指定。</pd>
        </plentry>
        <plentry>
          <pt>-l | --list</pt>
          <pd>列出将用指定选项进行分析的表格。<cmdname>ANALYZE</cmdname>操作不执行。</pd>
        </plentry>
        <plentry>
          <pt>-p <varname>parallel-level</varname></pt>
          <pd>并行分析的表的数量。<varname>并行级别</varname>可以是1到10之间的整数，包含首尾值。默认值是5.
          </pd>
        </plentry>
        <plentry>
          <pt>-s <varname>schema</varname></pt>
          <pd>指定要分析的模式。模式中的所有表将被分析。只能在命令行中指定一个模式名称。
          </pd>
          <pd>只有一个选项可用于指定要分析的文件：<codeph>-f</codeph>或<codeph>--file</codeph>, <codeph>-t</codeph>,或
            <codeph>-s</codeph>。</pd>
        </plentry>
        <plentry>
          <pt>-t <varname>schema</varname>.<varname>table</varname></pt>
          <pd>只收集<varname>schema</varname>.<varname>table</varname>的统计信息。
            表名称必须使用模式名称进行限定。在命令行上只能指定一个表名。用户可以指定<codeph>-f</codeph>
            选项来指定文件中的多个表，或者指定<codeph>-s</codeph>选项来指定模式中的所有表。
          </pd>
          <pd>只有其中一个选项可用于指定要分析的文件:<codeph>-f</codeph>或<codeph>--file</codeph>, <codeph>-t</codeph>，或
            <codeph>-s</codeph>。
          </pd>
        </plentry>
        <plentry>
          <pt>-x <varname>col1</varname>, <varname>col2</varname>, ...</pt>
          <pd>可选的，必须用<cmdname>-t</cmdname>选项来指定。对于使用<cmdname>-t</cmdname>选项指定的表，
            请排除指定列上的收集的统计信息。统计信息只收集在未列出的列上。
          </pd>
          <pd>只能指定<cmdname>-i</cmdname>, 或<cmdname>-x</cmdname>。这两个选项不能同时指定。</pd>
        </plentry>
        <plentry>
          <pt>-a</pt>
          <pd>静默模式，不提示用户确认。</pd>
        </plentry>
        <plentry>
          <pt>-h | -? | --help </pt>
          <pd>展示在线帮助。</pd>
        </plentry>
        <plentry>
          <pt> -v | --verbose</pt>
          <pd>如果指定，则将日志记录级别设置为verbose，以在命令执行过程中向日志文件和命令行写入附加信息。
            这些信息包括所有要分析的表的列表（包括分区表的子叶子分区）。输出还包括每个<codeph>ANALYZE</codeph>
            操作操作的持续时间。
          </pd>
        </plentry>
        <plentry>
          <pt>--version</pt>
          <pd>显示此工具的版本。</pd>
        </plentry>
      </parml>
    </section>
    <section>
      <title>示例</title>
      <p>仅收集一组表格列的统计信息的示例。在数据库<codeph>mytest</codeph>中，收集表
        <codeph>public.orders</codeph>上的<codeph>shipdate</codeph>和<codeph>receiptdate</codeph>
        列的统计信息：</p>
      <codeblock>analyzedb -d mytest -t public.orders -i shipdate, receiptdate</codeblock>
      <p>一个在表上收集统计信息并排除一组列的示例。在数据库<codeph>mytest</codeph>中，收集表<codeph>public.foo</codeph>
        的统计数据，并且不收集<codeph>bar</codeph>和<codeph>test2</codeph>列的统计信息。
      </p>
      <codeblock>analyzedb -d mytest -t public.foo -x bar, test2</codeblock>
      <p>指定包含表列表的文件的示例。此命令收集名为<codeph>mytest</codeph>的数据库中文件
        <codeph>analyze-tables</codeph>列出的表的统计信息。</p>
      <codeblock>analyzedb -d mytest -f analyze-tables</codeblock>
      <p>如果用户未指定表，一组表或模式，则<cmdname>analyzedb</cmdname>实用程序会根据需要收集所有目录表
        和用户定义的表上的统计信息。此命令刷新数据库<codeph>mytest</codeph>中的系统目录表和用户定义的表上
        的表统计信息。</p>
      <codeblock>analyzedb -d mytest</codeblock>
      <p>用户可以创建一个PL/Python函数来运行<codeph>analyzedb</codeph>程序作为Greenplum的数据库函数。
        这个例子<codeph>CREATE FUNCTION</codeph>命令创建一个用户定义的PL/ Python函数，运行
        <codeph>analyzedb</codeph>工具并在命令行上显示输出。指定<codeph>analyzedb</codeph>选项作为函数参数。
        <codeblock>CREATE OR REPLACE FUNCTION analyzedb(params TEXT)
          RETURNS VOID AS
          $BODY$
          import subprocess
          cmd = ['analyzedb', '-a' ] + params.split()
          p = subprocess.Popen(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
          
          # verbose output of process
          for line in iter(p.stdout.readline, ''):
          plpy.info(line);
          
          p.wait()
          $BODY$
          LANGUAGE plpythonu VOLATILE;</codeblock></p>
      <p>当这个<codeph>SELECT</codeph>命令由gpadmin用户运行时，该<codeph>analyzedb</codeph>工具对
        数据库<codeph>mytest</codeph>中的<codeph>public.mytable</codeph>表执行一个分析操作。
      </p>
      <codeblock>SELECT analyzedb('-d mytest -t public.mytable') ;</codeblock>
      <note>注意：要创建一个PL/Python函数，该PL/Python程序语言必须在数据库中注册。例如，以管理员运行的
        <codeph>CREATE LANGUAGE</codeph>命令将吧PL/Python注册成不受信任的语言：
        <codeblock>CREATE LANGUAGE plpythonu;</codeblock></note>
    </section>
    <section>
      <title>另见</title>
      <p>
        <ph otherprops="op-print"><cite>Greenplum数据库参考指南</cite>中的<cmdname>ANALYZE</cmdname>命令。</ph>
        <ph otherprops="op-help">
          <codeph>
            <xref href="../../ref_guide/sql_commands/ANALYZE.xml#topic1"/>
          </codeph>
        </ph>
      </p>
    </section>
  </body>
</topic>
